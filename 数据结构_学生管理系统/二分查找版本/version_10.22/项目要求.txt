学生管理系统项目要求如下

面向对象编程
完成 学生, 课程,选课,成绩 的增删改查
保证文件的及时存储
变长字符串存储CMyString
所有的查询功能时间复杂度需要为logn

需要的功能：
查询:
(1) 通过学生ID查询学生姓名
(2) 通过学生姓名查询学生ID
(3) 通过课程ID查询课程名
(4) 通过课程名查询课程ID
(5) 通过课程ID查询选修了该课程的学生以及成绩
(6) 通过学生ID查询该学生选修的课程信息 

插入:
(1)新增学生(ID, 名字)
(2)新增课程(ID,名字)
(3)新增选课记录(学生ID, 课程ID, 分数)

删除:
(1) 通过id删除学生(ID, 名字)
(2) 通过id删除课程(ID,名字)
(3) 通过学生ID和课程ID删除选课记录(学生ID, 课程ID, 分数)

需要的属性：
学生id 学生名称
课程id 课程名称
成绩表 能够表示学生成绩 学生和课程
不出意外分别存储到三个二进制文件中，你也可以进行优化

当从文件中读取数据后，持久性维护这几个数据结构：

1.根据学生id查询学生：根据id排序学生数组 因为学生id具有唯一性，所以通过id查询学生时使用二分查找学生可以达到logn（第一个数据结构）

2.根据学生姓名查询学生：因为姓名会有同名的情况，所以我们把所有同名的学生数据放在一个数组单元里，再根据姓名排序。根据姓名查找学生的时候就可以同时输出所有同名学生的数据（第二个数据结构）

3.根据课程id查询课程：可以按照根据学生id查询的模式（第三个数据结构）

4.根据课程名称查询课程：可以按照根据学生姓名查询的模式（第四个数据结构）

5.根据课程id查询所有选择该课程的学生的成绩：我们可以根据课程id排序数组，将同一课程id的学生数据和成绩放在一个数组单元内，这样根据课程id进行二分查找时就可以输出所有选择该课程的学生数据和成绩，达到logn。（第五个数据结构）

6.根据学生id查询该学生所有选择的课程和成绩：根据学生id排序数组，将同一学生id所选择的课程数据和成绩放在同一数组单元内，这样根据学生id二分查找到学生后就可以输出该学生所有的课程数据和成绩，达到logn（第六个数据结构）


注意：内存中的数据结构需要与文件同步，所以每次对文件的写操作后都需要保持内存中数据的同步。当我每次中断程序重新打开的时候需要在内存中根据文件重新组织这些数据结构。

禁止使用STL以及pair，只可以使用我们自定义的CMyString CVector list linkedlist。